rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null && request.auth.token.email_verified == true;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow create: if request.auth != null && isOwner(userId);  // Allow creation even if email not verified
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if isAuthenticated() && isOwner(userId);
    }

    // Decks collection
    match /decks/{userId}/decks/{deckId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if isAuthenticated() && isOwner(userId);
    }

    // Study progress collection
    match /studyProgress/{userId}/cards/{cardId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && isOwner(userId);
    }

    // Shared decks collection - publicly readable
    match /sharedDecks/{deckId} {
      allow read: if true;  // Anyone can read shared decks
      allow create: if isAuthenticated();  // Authenticated users can share decks
      allow update: if isAuthenticated() && 
        (resource.data.sharedBy == request.auth.uid || 
         resource.data.sharedBy == "system@note2flash.com");
      allow delete: if isAuthenticated() && resource.data.sharedBy == request.auth.uid;
    }
  }
} 